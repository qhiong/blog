(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{573:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[s._v("#")]),s._v(" AJAX")]),s._v(" "),a("h4",{attrs:{id:"ajax介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax介绍"}},[s._v("#")]),s._v(" ajax介绍")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置AJAX")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" xhr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置请求信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一个参数：请求方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二个参数：请求数据的网址，**也可以是配置文件**")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三个参数：async 表示是否异步，false表示同步；true表示异步")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第四个参数：用户名和密码；可以用于传递数据")]),s._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"网址"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("用户名，密码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加请求加载事件")]),s._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"load"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("loadHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送请求")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ArrayBuffer data  类型化数组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Blob data  二进制大对象，是一个可以存储二进制文件的容器。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Document data  文档对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// DOMString? data  文本数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// FormData data  数据对象，可以直接封装内容")]),s._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 加载成功，得到响应结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 请求头")]),s._v("\n注意： 必须写在open之后，send之前\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text/html;charset=utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n也可以在里面添加：application"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("form"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("urlencoded\n注意：在使用ajax的post向"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP")]),s._v("服务器发送请求时，必须写这个请求头\n在node部分，可以通过请求头传递数据"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AJAX")]),s._v("；在服务器通过req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("header获取\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("获取服务器的响应头，服务器必须允许客户端接收")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Expose"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("服务器允许客户端接受响应头\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getResponseHeader\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getAllResponseHeaders\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//所有响应头和请求头自定义“X-”开头！！！！！！！！！！！！")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//timeout事件：必须在open之后，send之前")]),s._v("\n一个请求在被自动终止前所消耗的时间\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timeout"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("timeoutHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("时间\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeoutHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("abort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//触发改事件后主动关闭服务连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("readyState"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("当前通信的状态码\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("：代理被创建，open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("没被调用\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("：open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法被调用，url地址接收到了\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：send方法被调用完成，并且头部和状态已获得\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：下载中，服务器开始向客户端发送数据，接受过程\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：下载操作完成，服务器发送数据完全接收\n\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status：服务器的状态\n信息："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n成功："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("206")]),s._v("\n重定向："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("307")]),s._v("\n客户端错误："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("400")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("417")]),s._v("\n服务器错误："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("505")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br")])]),a("p",[s._v("配置cors解决跨域问题：")]),s._v(" "),a("p",[s._v("1.Access-Control-Allow-Origin：源跨域")]),s._v(" "),a("p",[s._v("2.Access-Control-Allow-Methods：方法跨域")]),s._v(" "),a("p",[s._v("3.Access-Control-Allow-Headers：请求头跨域")]),s._v(" "),a("p",[s._v("AJAX三种发送数据方式")]),s._v(" "),a("p",[s._v("1.get")]),s._v(" "),a("p",[s._v("2.请求头和响应头（可以减少使用代理方式来发送数据）")]),s._v(" "),a("p",[s._v("3.post")]),s._v(" "),a("h4",{attrs:{id:"接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[s._v("#")]),s._v(" 接口")]),s._v(" "),a("p",[s._v("路由：端口号后面携带的 http://localhost:4000/一级路由/二级路由/三级路由")]),s._v(" "),a("p",[s._v("同源策略：访问过去的必须时同一个策略")]),s._v(" "),a("p",[a("strong",[s._v("GET/POST的不同之处：")])]),s._v(" "),a("p",[s._v("1.GET在浏览器回退时是无害的，而POST会再次提交请求。")]),s._v(" "),a("p",[s._v("2.GET产生的URL地址可以被Bookmark，而POST不可以。")]),s._v(" "),a("p",[s._v("3.GET请求会被浏览器主动cache，而POST不会，除非手动设置。")]),s._v(" "),a("p",[s._v("4.GET请求只能进行url编码，而POST支持多种编码方式。")]),s._v(" "),a("p",[s._v("5.GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。")]),s._v(" "),a("p",[s._v("6.GET请求在URL中传送的参数是有长度限制的，而POST么有。")]),s._v(" "),a("p",[s._v("7.对参数的数据类型，GET只接受ASCII字符，而POST没有限制。")]),s._v(" "),a("p",[s._v("8.GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。")]),s._v(" "),a("p",[s._v("9.GET参数通过URL传递，POST放在Request body中。")]),s._v(" "),a("p",[s._v("10.GET产生一个TCP数据包；POST产生两个TCP数据包,Firefox就只发送一次。")]),s._v(" "),a("p",[s._v("decodeURIComponent()将URI编码格式转换为汉字")]),s._v(" "),a("p",[s._v("encodeURIComponent()将汉字转为URI编码")]),s._v(" "),a("p",[a("strong",[s._v("CommonJS只能用于node")])]),s._v(" "),a("p",[s._v("ES5前端：模块化开发用amd,cmd模块化")]),s._v(" "),a("p",[s._v("nodejs：模块化开发用commonJS")]),s._v(" "),a("p",[s._v("ES6：模块化开发：export")]),s._v(" "),a("h4",{attrs:{id:"模块化区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化区别"}},[s._v("#")]),s._v(" 模块化区别：")]),s._v(" "),a("p",[a("strong",[s._v("commonJS规范")])]),s._v(" "),a("p",[s._v("允许模块使用require方法来同步加载所依赖的其他模块，然后通过exports或module.exports导出需要暴露的接口。")]),s._v(" "),a("p",[a("strong",[s._v("ADM规范")])]),s._v(" "),a("p",[s._v("AMD（Asynchronous Module Definition）异步模块定义，客户端规范。采用异步方式加载模块，模块加载不影响它后面语句的代执行。")]),s._v(" "),a("p",[s._v("在使用时，需引入require.js")]),s._v(" "),a("p",[a("strong",[s._v("CMD规范")])]),s._v(" "),a("p",[s._v("CMD（Common Module Definition）通用模块定义，异步加载模块。")]),s._v(" "),a("p",[s._v("在使用时，需引入sea.js")]),s._v(" "),a("p",[a("strong",[s._v("ES6模块")])]),s._v(" "),a("p",[s._v("ES6通过imort和export实现模块的输入与输出，import命令用于输入其他模块提供的功能，export命令用于规定模块对外的接口。")]),s._v(" "),a("h3",{attrs:{id:"fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[s._v("#")]),s._v(" Fetch")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"网址"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("得到的是promise的fulfilled的状态\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDataa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"网址"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("method")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"方法"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("body")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("headers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("请求头"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    data"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//解析json数据")]),s._v("\n    data"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//解析文本数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nfetch里面的是一个迭代器\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"长连接和短连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#长连接和短连接"}},[s._v("#")]),s._v(" 长连接和短连接")]),s._v(" "),a("p",[s._v("长连接：所谓长连接，指在一个TCP连接上可以连续发送多个数据包，在TCP连接保持期间，如果没有数据包发送，需要双方发检测包以维持此连接，一般需要自己做在线维持（不发生RST包和四次挥手）。")]),s._v(" "),a("p",[s._v("连接→数据传输→保持连接(心跳)→数据传输→保持连接(心跳)→……→关闭连接（一个TCP连接通道多个读写通信）； *\n*   这就要求长连接在没有数据通信时，定时发送数据包(心跳)，以维持连接状态；")]),s._v(" "),a("p",[s._v("短连接：短连接是指通信双方有数据交互时，就建立一个TCP连接，数据发送完成后，则断开此TCP连接（管理起来比较简单，存在的连接都是有用的连接，不需要额外的控制手段）；")]),s._v(" "),a("p",[s._v("连接→数据传输→关闭连接；")]),s._v(" "),a("h3",{attrs:{id:"ajax和axios和fetch的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax和axios和fetch的区别"}},[s._v("#")]),s._v(" Ajax和Axios和Fetch的区别")]),s._v(" "),a("p",[s._v("XMLHttpRequest对象的出现，JavaScript调用它就可以让浏览器异步地发http请求，然后这项异步技术就被称为Ajax。 之后jQuery封装了它，让异步结果更清晰的表现在一个对象的回调函数属性上。编写方式更简单，但出现了新的问题~回调地狱。 Promise为了解决异步编程的回调地狱问题诞生了。 随后有人把xhr对象用Promise封装了起来~它就是axios库(浏览器端)，axios在node.js环境是http模块的封装 后来又出现了一个可以异步地发http请求的api，就是fetch()。它并非是封装xhr对象的库。而是全新的JavaScript的接口。而且fetch api天生就是自带Promise的 现在的Ajax就有了两种方式: xhr对象和fetch()")])])}),[],!1,null,null,null);t.default=e.exports}}]);