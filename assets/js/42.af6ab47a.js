(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{605:function(a,t,s){"use strict";s.r(t);var v=s(13),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[a._v("#")]),a._v(" 正则表达式")]),a._v(" "),s("h4",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),s("p",[a._v("1.字面量创建")]),a._v(" "),s("p",[a._v("var reg=/正则表达式内容/修饰符")]),a._v(" "),s("p",[a._v("2.实例化创建")]),a._v(" "),s("p",[a._v('var reg=new RegExp("正则表达式内容","修饰符")')]),a._v(" "),s("h4",{attrs:{id:"修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[a._v("#")]),a._v(" 修饰符")]),a._v(" "),s("p",[a._v("g  //全局查找")]),a._v(" "),s("p",[a._v("i    //不区分大小写")]),a._v(" "),s("p",[a._v("m   // 多行查找")]),a._v(" "),s("h4",{attrs:{id:"正则表达式方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式方法"}},[a._v("#")]),a._v(" 正则表达式方法")]),a._v(" "),s("p",[a._v("1.正则表达式.exec(“字符串”) //在字符串中查找（只能查找第一个）")]),a._v(" "),s("p",[a._v("属性：0：字符串；index：索引；input：整个字符串")]),a._v(" "),s("p",[a._v('2.正则表达式.test("字符串")  // 表示在字符串中查找是否有这个字符')]),a._v(" "),s("p",[a._v("注意： 同一个正则表达式不要连用test，因为第一个查询结束后会保留查询到的指针下标，下一次会继续这个指针下标继续寻找")]),a._v(" "),s("p",[a._v("var reg=/a/;")]),a._v(" "),s("p",[a._v('console.log(reg.test("cabc"));')]),a._v(" "),s("p",[a._v('console.log(reg.test("cdade"));')]),a._v(" "),s("h4",{attrs:{id:"字符串方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法"}},[a._v("#")]),a._v(" 字符串方法")]),a._v(" "),s("ol",[s("li",[a._v("match")])]),a._v(" "),s("p",[a._v("字符串.match(正则表达式)")]),a._v(" "),s("p",[a._v("注意：如果不加g,则跟exec()方法一样，会返回相应属性")]),a._v(" "),s("p",[a._v("加了修饰符就会查找符合要求的字符，并且将其截取出来放在数组中")]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("search：")])]),a._v(" "),s("p",[a._v("只能查找一个，不能查找多个，只能查找下标")]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("replace")])]),a._v(" "),s("p",[a._v("字符串.replace(正则表达式,字符串/函数)")]),a._v(" "),s("p",[a._v("‘assign'.replace('/a/g',function(a,b,c){")]),a._v(" "),s("p",[a._v("​\tif(b===0) return 0")]),a._v(" "),s("p",[a._v("​\telse return '2'")]),a._v(" "),s("p",[a._v("})")]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("split")])]),a._v(" "),s("p",[a._v("字符串.split(正则表达式，多少个)")]),a._v(" "),s("h4",{attrs:{id:"元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[a._v("#")]),a._v(" 元字符")]),a._v(" "),s("p",[a._v("通配符：（.）可以匹配任意一个字符")]),a._v(" "),s("p",[a._v("转义字符（\\）转义有其他含义的字符")]),a._v(" "),s("p",[a._v("[]代表其中的任意一个字符，相同的字符只取一个，另一个无意义")]),a._v(" "),s("p",[a._v(".到了[]里面，就是字符（.）不再是通配符")]),a._v(" "),s("p",[a._v("[]内再匹配左[和右]都需要转义字符\\转义，{}（）同样需要")]),a._v(" "),s("p",[a._v("[a-zA-Z0-9]表示字母和数字其中任意一个")]),a._v(" "),s("p",[a._v("[A-z]不可以表示字符中任意一个，因为ACSLL码中91—96之间的是非字母字符")]),a._v(" "),s("h4",{attrs:{id:"反义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反义字符"}},[a._v("#")]),a._v(" 反义字符")]),a._v(" "),s("p",[a._v("[^]不要^后面的字符，写在[]最前面，表示[]内的内容都不要，但是如果^在[]内不是最前面，表示的就是^字符")]),a._v(" "),s("p",[a._v("[^oa]表示不要o和a   [a^o]表示字母a^o中的任意一个")]),a._v(" "),s("h4",{attrs:{id:"简写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简写"}},[a._v("#")]),a._v(" 简写")]),a._v(" "),s("p",[a._v("\\w   表示[a-zA-Z0-9_]")]),a._v(" "),s("p",[a._v("\\W   表示[  ^a-zA-Z0-9]")]),a._v(" "),s("p",[a._v("\\d   表示 [0-9]")]),a._v(" "),s("p",[a._v("\\D   表示[ ^0-9]")]),a._v(" "),s("p",[a._v("\\s   表示空白字符 \\br \\n等")]),a._v(" "),s("p",[a._v("\\S   表示非空白字符")]),a._v(" "),s("h4",{attrs:{id:"重复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重复"}},[a._v("#")]),a._v(" 重复")]),a._v(" "),s("p",[a._v("{n} 表示要重复的次数，n表示重复几次")]),a._v(" "),s("p",[a._v("{1}表示匹配{}前面的字符一次")]),a._v(" "),s("p",[a._v("{0}表示匹配空字符串")]),a._v(" "),s("p",[a._v("[{}]表示匹配{}中的任意一个")]),a._v(" "),s("p",[a._v("{m,n} 表示重复次数m~n次，先匹配大的n次，再依次往下匹配")]),a._v(" "),s("p",[a._v("{0,n}最后会匹配一个空白字符")]),a._v(" "),s("p",[a._v("{4，4}=>{4}")]),a._v(" "),s("p",[a._v("当，后面没有数值时，表示匹配最大，无穷")]),a._v(" "),s("p",[a._v("{0，}表示可以没有，也可以有无穷多个   （*）   y *y * ===>简化 y *")]),a._v(" "),s("p",[a._v("{1，}表示可以有一个以上的                      （+）   z+z+z+  ===>简化z{3，}")]),a._v(" "),s("p",[a._v("{0，1}表示可以没有，也可以有一个        （?）\tx?x?x?   ===> 简化x{0,3}")]),a._v(" "),s("h4",{attrs:{id:"非贪婪匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非贪婪匹配"}},[a._v("#")]),a._v(" 非贪婪匹配")]),a._v(" "),s("p",[a._v("要有前后字符，并且将非贪婪字符写在中间")]),a._v(" "),s("p",[a._v(".*?   找到第一个符合要求的，前后字符中间可以没有字符，也可以有多个字符")]),a._v(" "),s("p",[a._v(".*+  找到第一个符合要求的，前后字符中间至少有1个字符")]),a._v(" "),s("p",[a._v("“address”.match(/a.*?d/) ==> ad")]),a._v(" "),s("p",[a._v('"address".match(/a.*+d/) ===> add')]),a._v(" "),s("h4",{attrs:{id:"起始字符和结束字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#起始字符和结束字符"}},[a._v("#")]),a._v(" 起始字符和结束字符")]),a._v(" "),s("p",[a._v("^                     $")]),a._v(" "),s("h4",{attrs:{id:"或者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#或者"}},[a._v("#")]),a._v(" 或者")]),a._v(" "),s("p",[a._v("|")]),a._v(" "),s("p",[a._v("1~31")]),a._v(" "),s("p",[a._v("/^[1-9]$|^[1,2]\\d$|^3[01]$/")]),a._v(" "),s("p",[a._v("正则匹配IP")]),a._v(" "),s("p",[a._v("/^(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])(.(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])){3}$/")]),a._v(" "),s("p",[a._v("邮箱匹配")]),a._v(" "),s("p",[a._v("/^\\w+@\\w+.(com|net|edu|cn)(.(cn|cc|jp|tw)?)$/")]),a._v(" "),s("h4",{attrs:{id:"小组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小组"}},[a._v("#")]),a._v(" 小组")]),a._v(" "),s("p",[a._v("（）组")]),a._v(" "),s("p",[s("strong",[a._v("作用：")])]),a._v(" "),s("p",[a._v("1.可以让很多或者部分作为一整块，还可以将多个部分作为整体做重复")]),a._v(" "),s("p",[a._v("2.使用match或者replace可以作为筛选部分处理")]),a._v(" "),s("p",[a._v("3.重复筛选")]),a._v(" "),s("p",[a._v("4.断言：前置肯定断言、前置否定断言、后置肯定断言、后置否定断言")]),a._v(" "),s("p",[a._v("案例：")]),a._v(" "),s("p",[a._v("”15[action]\".match(/(\\d+)\\ [([a-zA-Z0-9]+)\\ ]/).slice(1)  //  ['15','action']")]),a._v(" "),s("p",[a._v('"《西游记》，《三国演义》，《红楼梦》，《水浒传》".replace(/《(.*?)》/g,function(item,$1){')]),a._v(" "),s("p",[a._v("​\t\treturn $1 // 西游记，三国演义，红楼梦，水浒传")]),a._v(" "),s("p",[a._v("})")]),a._v(" "),s("p",[a._v('"18941564567".replace(/(\\d{3})\\d{4}(\\d{4})/g,$1 **** $2 ) // 189****4567')]),a._v(" "),s("p",[a._v('"dhsaodhskjadchahduashjkasgdshadjkhasjdhljashd".split("").sort().join("").replace(/([a-zA-Z0-9])\\1*/g,function(item){')]),a._v(" "),s("p",[a._v('​\treturn item[0]+"{"+item.length+"}"  //a{2}b{4}c{3}...')]),a._v(" "),s("p",[a._v("})")]),a._v(" "),s("p",[a._v("断言：是一个条件，条件不占位，只是用来判断")]),a._v(" "),s("p",[a._v('"abacad".replace(/(?=c)/g,"0")    // 后置肯定断言   ab0cad')]),a._v(" "),s("p",[a._v('"abacad".replace(/(?!c)/g,"0")     //后置否定断言    0bac0d')]),a._v(" "),s("p",[a._v('"bacada".replace(/(?<=c)/g,"0")    // 前置肯定断言   bac0da')]),a._v(" "),s("p",[a._v('"bacada".replace(/(?<!c)/g,"0")     //前置否定断言    b0cad0')]),a._v(" "),s("p",[a._v("\"30+50=80\".match(/\\d+$/g)     // '80'")]),a._v(" "),s("p",[a._v("\"30+50=80\".match(/^\\d+/g)     //'30'")]),a._v(" "),s("p",[a._v("\"30+50=80\".match(/^(?=\\d+)./g)     //'3'")]),a._v(" "),s("p",[a._v("面试题：2[2[2[ab]2[cd]]3[e]]")]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" regExp"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[a._v("(\\d+)\\[([a-zA-Z]+)\\]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("regExp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("regExp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("$1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("$2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" $2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("$1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])])])}),[],!1,null,null,null);t.default=_.exports}}]);